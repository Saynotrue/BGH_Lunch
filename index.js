const express = require('express');
const bodyParser = require('body-parser');
const axios = require('axios');
const xml2js = require('xml2js');
const moment = require('moment');

const app = express();
app.use(bodyParser.json());

app.post('/webhook', async (req, res) => {
  const userDate = req.body.queryResult.parameters.date;
  const today = userDate ? moment(userDate).format('YYYYMMDD') : moment().format('YYYYMMDD');

  const url = `https://open.neis.go.kr/hub/mealServiceDietInfo?ATPT_OFCDC_SC_CODE=J10&SD_SCHUL_CODE=7531246&MLSV_YMD=${today}`;

  try {
    const response = await axios.get(url);
    const xml = response.data;
    const parser = new xml2js.Parser({ explicitArray: false, trim: true });
    const result = await parser.parseStringPromise(xml);

    const row = result?.mealServiceDietInfo?.row;
    const dishName = row?.DDISH_NM;
    const cal = row?.CAL_INFO;

    if (dishName) {
      const cleaned = dishName.replace(/\([^\)]*\)/g, '').replace(/<br\/?>/gi, '\n').trim();
      const calText = cal ? `\n\nÏ¥ù ÏπºÎ°úÎ¶¨: ${cal}` : '';
      return res.json({
        fulfillmentText: `üç± Ïò§ÎäòÏùò Í∏âÏãù:\n${cleaned}${calText}`,
      });
    } else {
      return res.json({
        fulfillmentText: 'Ïò§ÎäòÏùÄ Í∏âÏãù Ï†ïÎ≥¥Í∞Ä ÏóÜÏñ¥Ïöî üò¢',
      });
    }
  } catch (err) {
    console.error(err);
    return res.json({
      fulfillmentText: 'Í∏âÏãù Ï†ïÎ≥¥Î•º Î∂àÎü¨Ïò§Îäî Ï§ë Î¨∏Ï†úÍ∞Ä ÏÉùÍ≤ºÏñ¥Ïöî.',
    });
  }
});

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
  console.log(`ÏÑúÎ≤Ñ Ïã§Ìñâ Ï§ë: Ìè¨Ìä∏ ${PORT}`);
});
